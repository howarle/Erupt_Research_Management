package com.ezdml.erupt.ezdemo.researchmanagement.project;


/*
 * Copyright © 2022 xxx.xx All rights reserved.
 * Author: xxx (xx@xx.com)
 * Generated by EZDML 5/23/2022 16:32:45
 */

import xyz.erupt.annotation.*;
import xyz.erupt.annotation.sub_erupt.*;
import xyz.erupt.annotation.sub_field.*;
import xyz.erupt.annotation.sub_field.sub_edit.*;
import xyz.erupt.upms.model.base.HyperModel;
import xyz.erupt.jpa.model.BaseModel;
import java.util.*;
import java.util.Date;
import javax.persistence.*;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.SQLInsert;
import org.hibernate.annotations.Where;
import org.hibernate.annotations.WhereJoinTable;

import com.ezdml.erupt.ezdemo.researchmanagement.link_project_institutions.link_project_institutions;
import com.ezdml.erupt.ezdemo.researchmanagement.link_project_staff.link_project_staff;
import com.ezdml.erupt.ezdemo.researchmanagement.staff.Staff;
import com.ezdml.erupt.ezdemo.researchmanagement.thirdpartyinstitutions.ThirdPartyInstitutions;

@Erupt(
    name = "项目",
    power = @Power(importable = true, export = true)
    // drills = {
    //     @Drill(code = "drill", 
    //            title = "数据钻取",
    //            //最终生成的表达式为：EruptTest.id = DrillErupt.eruptTest.id
    //            link = @Link(linkErupt = ProjectStaffParticipate.class,  //关联表
    //                         joinColumn = "project.id"))  //关联表达式
    // }
)
@Table(name = "Project")   //数据库表名
@Entity
public class Project{


    @Id
    @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native")
    @EruptField(
        sort = 0,
        views = @View(
            title = "项目名id",
            width = "120"
        )
    )
    private Long id;
    
    @EruptField(
        sort = 1,
        views = @View(
            title = "项目名",
            width = "120"
        ),
        edit = @Edit(
            title = "项目名",
            notNull = true
        )
    )
    private String name;

    @ManyToMany
    @JoinTable(
            name = "link_project_staff",
            joinColumns = @JoinColumn(name = "project_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "staff_id", referencedColumnName = "id")
    )
    @WhereJoinTable(clause = "role = 1 ")
    @SQLInsert(sql = "insert into link_project_staff (project_id, staff_id, role, id) values (?, ?, 1, nextval('hibernate_sequence'))")
    @EruptField(
        sort = 10,
        edit = @Edit(
            title = "1负责人", 
            type = EditType.TAB_TABLE_REFER,
            referenceTableType = @ReferenceTableType(label = "title")
        )
    )
    private Set<Staff> principal;

    @ManyToMany
    @JoinTable(
            name = "link_project_staff",
            joinColumns = @JoinColumn(name = "project_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "staff_id", referencedColumnName = "id")
    )
    @WhereJoinTable(clause = "role = 2 ")
    @SQLInsert(sql = "insert into link_project_staff (project_id, staff_id, role, id) values (?, ?, 2, nextval('hibernate_sequence'))")
    @EruptField(
        sort = 11,
        edit = @Edit(title = "2参与者", type = EditType.TAB_TABLE_REFER,
                referenceTableType = @ReferenceTableType(label = "title"))
    )
    private Set<Staff> participators;

    @ManyToMany
    @JoinTable(
            name = "link_project_staff",
            joinColumns = @JoinColumn(name = "project_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "staff_id", referencedColumnName = "id")
    )
    @WhereJoinTable(clause = "role = 3 ")
    @SQLInsert(sql = "insert into link_project_staff (project_id, staff_id, role, id) values (?, ?, 3, nextval('hibernate_sequence'))")
    @EruptField(
        sort = 12,
        edit = @Edit(title = "3监管者", type = EditType.TAB_TABLE_REFER,
                referenceTableType = @ReferenceTableType(label = "title"))
    )
    private Set<Staff> regulator;
    
    @Column(columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",updatable = false, insertable = false)
    @EruptField(
        sort = 21,
        views = @View(
            title = "创建时间",
            width = "120"
        ),
        edit = @Edit(
            title = "创建时间",
            readonly = @Readonly()
        )
    )
    private Date createTime;

    @EruptField(
        sort = 22,
        views = @View(
            title = "经费总额",
            width = "120"
        ),
        edit = @Edit(
            title = "经费总额"
        )
    )
    private Integer funds;
    
    @EruptField(
        sort = 22,
        views = @View(
            title = "开工日期",
            width = "120"
        ),
        edit = @Edit(
            title = "开工日期",
            type = EditType.DATE,
            dateType = @DateType(type = DateType.Type.DATE)
        )
    )
    private Date startDate;
    
    @EruptField(
        sort = 23,
        views = @View(
            title = "完成日期",
            width = "120"
        ),
        edit = @Edit(
            title = "完成日期",
            type = EditType.DATE,
            dateType = @DateType(type = DateType.Type.DATE)
        )
    )
    private Date finshDate;
    
    @Transient //由于该字段不需要持久化，所以使用该注解修饰
    @EruptField(
        sort = 30,
        edit = @Edit(title = "分割线", type = EditType.DIVIDE)
    )
    private String divide;
    
    @EruptField(
        sort = 41,
        views = @View(
            title = "研究介绍"
        ),
        edit = @Edit(
            title = "研究介绍",
            type = EditType.HTML_EDITOR, 
            htmlEditorType = @HtmlEditorType(HtmlEditorType.Type.UEDITOR)
        )
    )
    private String researchIntro;
    

    @ManyToMany
    @JoinTable(
            name = "link_project_institutions",
            joinColumns = @JoinColumn(name = "project_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "institution_id", referencedColumnName = "id")
    )
    @WhereJoinTable(clause = "role = 1 ")
    @SQLInsert(sql = "insert into link_project_institutions (project_id, institution_id, role, id) values (?, ?, 1, nextval('hibernate_sequence'))")
    @EruptField(
        sort = 51,
        edit = @Edit(title = "4委托机构", type = EditType.TAB_TABLE_REFER,
                referenceTableType = @ReferenceTableType(label = "title"))
    )
    private Set<ThirdPartyInstitutions> clientThirdPartyInstitutions;

    @ManyToMany
    @JoinTable(
            name = "link_project_institutions",
            joinColumns = @JoinColumn(name = "project_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "institution_id", referencedColumnName = "id")
    )
    @WhereJoinTable(clause = "role = 2 ")
    @SQLInsert(sql = "insert into link_project_institutions (project_id, institution_id, role, id) values (?, ?, 2, nextval('hibernate_sequence'))")
    @EruptField(
        sort = 52,
        edit = @Edit(title = "5合作机构", type = EditType.TAB_TABLE_REFER,
                referenceTableType = @ReferenceTableType(label = "title"))
    )
    private Set<ThirdPartyInstitutions> partnerThirdPartyInstitutions;

    @ManyToMany
    @JoinTable(
            name = "link_project_institutions",
            joinColumns = @JoinColumn(name = "project_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "institution_id", referencedColumnName = "id")
    )
    @WhereJoinTable(clause = "role = 3 ")
    @SQLInsert(sql = "insert into link_project_institutions (project_id, institution_id, role, id) values (?, ?, 3, nextval('hibernate_sequence'))")
    @EruptField(
        sort = 52,
        edit = @Edit(title = "6监管机构", type = EditType.TAB_TABLE_REFER,
                referenceTableType = @ReferenceTableType(label = "title"))
    )
    private Set<ThirdPartyInstitutions> regulatorThirdPartyInstitutions;
    

}
